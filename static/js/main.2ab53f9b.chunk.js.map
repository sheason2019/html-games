{"version":3,"sources":["cells/init.js","cells/cellsSlice.js","cells/Card.js","cells/Collections.js","cells/Slots.js","cells/ControlBar.js","cells/End.js","cells/FAB.js","cells/Column.js","cells/GamePanel.js","cells/Help.js","cells/Message.js","cells/Welcome.js","cells/index.js","layout/Header.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","store.js","index.js"],"names":["initColumns","columns","i","push","initSlots","slots","initCollections","collections","initialState","time","temp","index","stack","type","start","status","message","open","text","message_id","history","justCancel","blockAutoCollection","cellsSlice","createSlice","name","reducers","initColumn","state","cards","j","value","color","initCards","length","cardIndex","Math","floor","random","splice","selectColumn","payload","Object","assign","moveCard","target","moveableLength","slot","filter","item","empty","getMoveLength","Date","getTime","min","pop","reverse","moveToSlot","moveToCollection","isEnd","forEach","setTime","setMessage","setStatus","pushIntoHistory","cancelAction","actions","CardContainer","styled","div","props","last","selected","Para","Icon","Backdrop","getCardValue","num","String","Card","ref","React","useRef","useState","shouldMove","setShouldMove","onMouseMove","e","onMouseDown","onMouseUp","backdrop","data","EmptyCard","EmptyContainer","ColorBackground","Collections","useSelector","cells","dispatch","useDispatch","map","collection","onClick","stopPropagation","handleOnClick","Collection","style","position","zIndex","top","Empty","handleClickSlot","useCallback","checkToCollection","useEffect","BarContainer","TimeContainer","Time","TimeCounter","ControlBar","setTimeout","EndWrapper","EndContainer","InfoContainer","InfoItem","NewGameButton","MenuButton","End","completedPatch","storage","localStorage","getItem","current","parseInt","setItem","marginTop","FloatActionButton","FAB","children","ColumnWrapper","Column","moveInfo","column","result","allowMove","tryMoveCard","undefined","unshift","searchMoveableCard","resetSelected","shouldBackdropOpen","button","slotsInfo","allow","couldToSlot","couldToCollection","card","show","MoveAbleColumnWrapper","space","MoveAbleColumn","ColumnContainer","GamePanel","HelpContainer","HelpItem","Help","textAlign","MessageContainer","Message","timeout","timestamp","handleCloseMessage","clearTimeout","userSelect","WelcomeContainer","WelcomeItem","disable","Welcome","Background","Cells","content","shortcut","Map","handleCancelAction","document","onkeydown","set","code","get","onkeyup","onContextMenu","preventDefault","HeaderContainer","Title","Header","App","path","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","cellsReducer","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.2ab53f9b.chunk.js","sourcesContent":["export function initCards() {\n  const cards = [];\n  for (let i = 0; i < 13; i++) {\n    for (let j = 0; j < 4; j++) {\n      cards.push({value: i, color: j})\n    }\n  }\n  return cards;\n}\n\nexport function initColumns() {\n  const columns = [];\n  for (let i = 0; i < 8; i++) {\n    columns.push([]);\n  }\n  return columns;\n}\n\nexport function initSlots() {\n  const slots = [];\n  for (let i = 0; i < 4; i++) {\n    slots.push(null);\n  }\n  return slots;\n}\n\nexport function initCollections() {\n  const collections = [];\n  for (let i = 0; i < 4; i++) {\n    collections.push([]);\n  }\n  return collections;\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { initCards, initCollections, initColumns, initSlots } from \"./init\";\n\nconst getMoveLength = (slots, columns, target) => {\n  const slot = slots.filter((item) => item === null).length;\n  const empty = columns.filter(\n    (item, index) => item.length === 0 && index !== target\n  ).length;\n  return (slot + 1) * 2 ** empty;\n};\n\nconst initialState = {\n  // 耗时\n  time: 0,\n  // 左上角的插槽 index为 8-11\n  slots: initSlots(),\n  // 右上角的插槽\n  collections: initCollections(),\n  // 列\n  columns: initColumns(),\n  // 选中的栈\n  temp: {\n    index: -1,\n    stack: [],\n    type: \"column\",\n  },\n  // 游戏是否开始的标识符\n  start: false,\n  // status 游戏状态\n  status: \"index\",\n  // 提示信息的数据结构\n  message: {\n    open: false,\n    text: \"\",\n    message_id: 0,\n  },\n  history: [],\n  justCancel: false,\n  blockAutoCollection: false,\n};\n\nexport const cellsSlice = createSlice({\n  name: \"cells\",\n  initialState,\n  reducers: {\n    initColumn(state) {\n      const cards = initCards();\n      const columns = initColumns();\n      let index = 0;\n      while (cards.length > 0) {\n        const cardIndex = Math.floor(Math.random() * cards.length);\n        const temp = cards.splice(cardIndex, 1)[0];\n        columns[index++].push(temp);\n        if (index > 7) {\n          index = 0;\n        }\n      }\n      state.columns = columns;\n      state.history = [];\n      state.collections = initCollections();\n      state.slots = initSlots();\n      state.time = 0;\n      state.blockAutoCollection = false;\n    },\n    selectColumn(state, payload) {\n      Object.assign(state.temp, payload.payload);\n    },\n    moveCard(state, payload) {\n      const { target, length } = payload.payload;\n      const moveableLength = getMoveLength(state.slots, state.columns, target);\n      if (state.temp.index === -1) {\n        return;\n      } else if (length > moveableLength) {\n        if (state.columns[target].length !== 0) {\n          state.message.open = true;\n          state.message.text = `移动卡牌失败，您试图移动${length}张牌，但现在只能移动${moveableLength}张`;\n          state.message.message_id = new Date().getTime();\n          return;\n        }\n      }\n      if (state.temp.type === \"column\") {\n        const stack = [];\n        for (let i = 0; i < Math.min(length, moveableLength); i++) {\n          const item = state.columns[state.temp.index].pop();\n          stack.push(item);\n        }\n        stack.reverse();\n        for (let i of stack) {\n          state.columns[target].push(i);\n        }\n        state.temp = { index: -1, stack: [] };\n      } else if (state.temp.type === \"slot\") {\n        state.columns[target].push(state.slots[state.temp.index]);\n        state.slots[state.temp.index] = null;\n      }\n      state.start = true;\n      state.blockAutoCollection = false;\n    },\n    moveToSlot(state, payload) {\n      const { target } = payload.payload;\n      if (state.temp.stack.length === 0 || state.slots[target] !== null) {\n        return;\n      } else {\n        let item;\n        if (state.temp.type === 'column') {\n          item = state.columns[state.temp.index].pop();\n        } else if (state.temp.type === 'slot') {\n          item = state.slots[state.temp.index];\n          state.slots[state.temp.index] = null;\n        } else {\n          return;\n        }\n        state.slots[target] = item;\n        state.temp.index = -1;\n        state.temp.stack = [];\n        state.start = true;\n        state.blockAutoCollection = false;\n      }\n    },\n    moveToCollection(state, payload) {\n      const { target } = payload.payload;\n      const index = state.temp.index;\n      if (state.temp.stack.length === 0) {\n        return;\n      } else {\n        let source;\n        let item;\n        if (state.temp.type === \"slot\") {\n          source = state.slots[index];\n          item = state.slots[index];\n          state.slots[index] = null;\n        } else if (state.temp.type === \"column\") {\n          source = state.columns[index];\n          item = source.pop();\n        }\n        state.collections[target].push(item);\n        state.temp = { index: -1, stack: [] };\n        state.start = true;\n        state.blockAutoCollection = false;\n      }\n      let isEnd = true;\n      state.collections.forEach((item) => {\n        if (item.length === 0) {\n          return;\n        } else if (item[item.length - 1].value !== 12) {\n          isEnd = false;\n        }\n      });\n      state.start = !isEnd;\n      state.status = isEnd ? 'end' : state.status;\n    },\n    setTime(state, payload) {\n      state.time = payload.payload;\n    },\n    setMessage(state, payload) {\n      Object.assign(state.message, payload.payload);\n    },\n    setStatus(state, payload) {\n      state.status = payload.payload;\n    },\n    pushIntoHistory(state, payload) {\n      if (state.justCancel) {\n        state.justCancel = false;\n        return;\n      }\n      if (state.start) {\n        state.history.push(payload.payload);\n      } else {\n        state.history[0] = payload.payload;\n      }\n    },\n    cancelAction(state, payload) {\n      if (state.status === 'end') {\n        return;\n      }\n      if (state.history.length > 1) {\n        const item = payload.payload;\n        state.history.pop();\n        state.collections = Object.assign([], item.collections);\n        state.columns = Object.assign([], item.columns);\n        state.slots = Object.assign([], item.slots);\n        state.justCancel = true;\n        state.blockAutoCollection = true;\n      }\n    },\n  },\n});\n\nexport const {\n  initColumn,\n  selectColumn,\n  moveCard,\n  moveToSlot,\n  moveToCollection,\n  setTime,\n  setMessage,\n  setStatus,\n  cancelAction,\n  pushIntoHistory,\n} = cellsSlice.actions;\n\nexport default cellsSlice.reducer;\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nconst CardContainer = styled.div`\n  width: 8rem;\n  height: 10rem;\n  background-color: white;\n  border-radius: 0.5rem;\n  margin-bottom: ${props => props.last ? 0 : '-7rem'};\n  box-shadow: ${props => props.selected ? '0px 1px 2px 4px rgba(0, 0, 0, 0.5)' : '0px 1px 2px 0px rgba(0, 0, 0, 0.75)'};\n  position: relative;\n  overflow: hidden;\n`;\nconst Para = styled.div`\n  font-size: 1.25rem;\n  display: flex;\n  padding-top: 0.25rem;\n  padding-left: 0.25rem;\n  color: ${(props) => (props.color % 2 === 0 ? \"black\" : \"red\")};\n  user-select: none;\n`;\nconst Icon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 1.25rem;\n`;\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.25);\n  visibility: ${props => props.open ? 'normal' : 'hidden'};\n`;\n\nconst color = [\"♠\", \"♥\", \"♣️\", \"♦️\"];\nconst getCardValue = (num) => {\n  switch (num) {\n    case 0:\n      return \"A\";\n    case 10:\n      return \"J\";\n    case 11:\n      return \"Q\";\n    case 12:\n      return \"K\";\n    default:\n      return String(num + 1);\n  }\n};\n\nfunction Card(props) {\n  const ref = React.useRef();\n  const [shouldMove, setShouldMove] = React.useState(false);\n  const handleOnMouseMove = (e) => {\n    return;\n  };\n  const handleOnMouseDown = () => {\n    setShouldMove(true);\n  };\n  const handleOnMouseUp = () => {\n    setShouldMove(false);\n  };\n  return (\n    <CardContainer\n      ref={ref}\n      shouldMove={shouldMove}\n      selected={props.selected}\n      last={props.last}\n      onMouseMove={handleOnMouseMove}\n      onMouseDown={handleOnMouseDown}\n      onMouseUp={handleOnMouseUp}\n    >\n      <Backdrop open={props.backdrop} />\n      <Para color={props.data.color}>\n        <Icon color={props.data.color}>{color[props.data.color]}</Icon>\n        <span>{getCardValue(props.data.value)}</span>\n      </Para>\n    </CardContainer>\n  );\n}\n\nexport default Card;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\"\nimport Card from \"./Card\";\nimport { moveToCollection, selectColumn } from \"./cellsSlice\";\n\nconst EmptyCard = styled.div`\n  width: 8rem;\n  height: 10rem;\n  margin: 5px;\n  border: 1px solid white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border-radius: 0.5rem;\n  user-select: none;\n`;\n\nconst EmptyContainer = styled.div`\n  display: flex;\n  padding: 5px;\n`;\n\nconst ColorBackground = styled.div`\n  color: ${props => props.index % 2 === 0 ? 'black' : 'red'};\n  font-size: 5rem;\n  opacity: 0.25;\n`;\n\nexport default function Collections() {\n  const collections = useSelector(state => state.cells.collections);\n  const selected = useSelector(state => state.cells.temp);\n  const dispatch = useDispatch();\n  const handleOnClick = (e, target) => {\n    e.stopPropagation();\n    const collection = collections[target];\n    const item = selected.stack[selected.stack.length - 1];\n    if (!item) {\n      return;\n    }\n    if (item.color === target && item.value === collection.length) {\n      dispatch(moveToCollection({target}));\n    }\n    dispatch(selectColumn({ index: -1, stack: [] }));\n  }\n  return (\n    <EmptyContainer>\n      {\n        collections.map((collection, index) => (\n          <EmptyCard key={index} onClick={(e) => handleOnClick(e, index)}>\n            <Collection collection={collection} index={index} />\n          </EmptyCard>\n        ))\n      }\n    </EmptyContainer>\n  )\n}\n\nfunction Collection({index, collection}) {\n  const colors = [\"♠\", \"♥\", \"♣️\", \"♦️\"];\n  if (collection.length === 0) {\n    return <ColorBackground index={index}>{colors[index]}</ColorBackground>;\n  } else {\n    return (\n      <div style={{ position: 'absolute', zIndex: collection.value, top: 0 }}>\n        <Card data={collection[collection.length - 1]} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Card from \"./Card\";\nimport { moveToSlot, selectColumn, moveToCollection } from \"./cellsSlice\";\n\nconst EmptyCard = styled.div`\n  width: 8rem;\n  height: 10rem;\n  margin: 5px;\n  border: 1px solid white;\n  border-radius: 0.5rem;\n`;\n\nconst EmptyContainer = styled.div`\n  display: flex;\n  padding: 5px;\n`;\n\nexport default function Empty() {\n  const dispatch = useDispatch();\n  const slots = useSelector((state) => state.cells.slots);\n  const temp = useSelector((state) => state.cells.temp);\n  const collections = useSelector((state) => state.cells.collections);\n  const start = useSelector(state => state.cells.start);\n  const blockAutoCollection = useSelector(state => state.cells.blockAutoCollection);\n  const handleClickSlot = React.useCallback(\n    (num) => {\n      if (slots[num] === null) {\n        dispatch(moveToSlot({ target: num }));\n      } else {\n        dispatch(\n          selectColumn({ index: num, stack: [slots[num]], type: \"slot\" })\n        );\n      }\n    },\n    [dispatch, slots]\n  );\n\n  const checkToCollection = React.useCallback(() => {\n    if (blockAutoCollection) {\n      return;\n    }\n    let min = 12;\n    collections.forEach(collection => {\n      if (collection.length === 0) {\n        min = 0;\n      } else if (collection[collection.length - 1].value < min) {\n        min = collection[collection.length - 1].value;\n      }\n    })\n\n    slots.forEach((item, index) => {\n      if (item === null) {\n        return;\n      } else if (item.value >= min + 2) {\n        return;\n      }\n\n      const collection = collections[item.color];\n      if (collection.length === 0) {\n        if (item.value === 0) {\n          handleClickSlot(index);\n          dispatch(moveToCollection({ target: item.color }));\n        }\n      } else {\n        if (collection[collection.length - 1].value + 1 === item.value) {\n          handleClickSlot(index);\n          dispatch(moveToCollection({ target: item.color }));\n        }\n      }\n    });\n  }, [collections, dispatch, handleClickSlot, slots]);\n\n  React.useEffect(() => {\n    if (start) {\n      checkToCollection();\n    }\n  }, [checkToCollection, start]);\n\n  return (\n    <EmptyContainer>\n      {slots.map((slot, index) => (\n        <EmptyCard\n          key={index}\n          onClick={(e) => {\n            handleClickSlot(index);\n            e.stopPropagation();\n          }}\n        >\n          {slot === null ? null : (\n            <Card\n              data={slot}\n              selected={temp.type === \"slot\" && temp.index === index}\n            />\n          )}\n        </EmptyCard>\n      ))}\n    </EmptyContainer>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\"\nimport Collection from \"./Collections\"\nimport Slots from \"./Slots\"\nimport { setTime } from './cellsSlice';\n\nconst BarContainer = styled.div`\n  display: flex;\n  margin-top: 4.5rem;\n\n  @media (max-width: 960px) {\n    transform: scale(0.5);\n    margin-top: -2rem;\n  }\n`;\nconst TimeContainer = styled.div`\n  width: 12rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nconst Time = styled.div`\n  font-size: 24px;\n  font-weight: 600;\n  user-select: none;\n`;\nconst TimeCounter = styled.div`\n  background-color: rgba(0,0,0,0.25);\n  width: 80%;\n  height: 3rem;\n  color: rgba(255,255,255,0.9);\n  font-size: 2.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 1rem;\n  user-select: none;\n`;\n\nexport default function ControlBar() {\n  const time = useSelector(state => state.cells.time);\n  const start = useSelector(state => state.cells.start);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    if (start) {\n      setTimeout(() => {\n        dispatch(setTime(time + 1));\n      }, 1000);\n    } else {\n    }\n  }, [dispatch, start, time]);\n  return (\n    <BarContainer>\n      <Slots />\n        <TimeContainer>\n          <Time>Time</Time>\n          <TimeCounter>{time}</TimeCounter>\n        </TimeContainer>\n      <Collection />\n    </BarContainer>\n  )\n}","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { initColumn, setStatus } from \"./cellsSlice\";\n\nconst EndWrapper = styled.div`\n  flex-grow: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst EndContainer = styled.div`\n  padding: 1.5rem;\n  width: 35rem;\n  background-color: rgba(0, 0, 0, 0.5);\n  border: 2px solid #000;\n  margin: 0.5rem 0;\n  border-radius: 4px;\n  color: white;\n  user-select: none;\n  p {\n    margin: 0;\n  }\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  width: 80%;\n`;\nconst InfoItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst NewGameButton = styled.div`\n  width: 80%;\n  height: 3rem;\n  margin-top: 1rem;\n  background-color: #1b7ced;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.75rem;\n  border-radius: 4px;\n`;\nconst MenuButton = styled.div`\n  width: 80%;\n  height: 2rem;\n  margin-top: 1rem;\n  background-color: #e44c51;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.25rem;\n  border-radius: 4px;\n`;\n\nfunction End() {\n  const time = useSelector(state => state.cells.time);\n  const completedPatch = React.useRef(0);\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    const storage = localStorage.getItem('completePatch');\n    completedPatch.current = (storage ? parseInt(storage) : 0) + 1;\n    localStorage.setItem('completePatch', completedPatch.current);\n  }, []);\n\n  const handleNewGame = () => {\n    dispatch(initColumn());\n    dispatch(setStatus('game'));\n  };\n  const handleBackToMenu = () => {\n    dispatch(initColumn());\n    dispatch(setStatus('index'));\n  };\n  return (\n    <EndWrapper>\n      <EndContainer>\n        <h2 style={{ marginTop: 0 }}>恭喜通关</h2>\n        <InfoContainer>\n          <InfoItem>\n            <p>时间</p>\n            <p>{time}</p>\n          </InfoItem>\n          <InfoItem>\n            <p>已完成场次：</p>\n            <p>{completedPatch.current}</p>\n          </InfoItem>\n        </InfoContainer>\n        <NewGameButton onClick={handleNewGame}>新的游戏</NewGameButton>\n        <MenuButton onClick={handleBackToMenu}>返回菜单</MenuButton>\n      </EndContainer>\n    </EndWrapper>\n  )\n}\n\nexport default End;\n","import styled from \"styled-components\";\n\nconst FloatActionButton = styled.div`\n  position: fixed;\n  right: 1rem;\n  bottom: 1rem;\n  width: 4rem;\n  height: 4rem;\n  border-radius: 2rem;\n  color: #FFF;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 20;\n  background-color: rgba(0,0,0,0.5);\n  border: 2px solid rgba(0,0,0,0.75);\n`;\n\nfunction FAB(props) {\n  return (\n    <FloatActionButton {...props}>{props.children}</FloatActionButton>\n  )\n}\n\nexport default FAB;\n","import Card from \"./Card\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { moveCard, moveToCollection, moveToSlot, selectColumn } from \"./cellsSlice\";\nimport React from \"react\";\n\nconst ColumnWrapper = styled.div`\n  margin: 0 0.75rem;\n  position: relative;\n  align-self: flex-start;\n`;\nconst EmptyCard = styled.div`\n  width: 8rem;\n  height: 10rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border-radius: 0.5rem;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.1);\n    cursor: pointer;\n  }\n`;\n\nconst searchMoveableCard = (column) => {\n  const temp = {};\n  const stack = [];\n  const length = column.length;\n  let index = 0;\n  while (true) {\n    if (index >= length) {\n      break;\n    }\n    if (temp.value === undefined) {\n      Object.assign(temp, column[length - 1]);\n      index++;\n    } else {\n      if (\n        column[length - 1 - index].value === temp.value + 1 &&\n        column[length - 1 - index].color % 2 !== temp.color % 2\n      ) {\n        Object.assign(temp, column[length - 1 - index]);\n        index++;\n      } else {\n        break;\n      }\n    }\n    stack.unshift(Object.assign({}, temp));\n  }\n  return stack;\n};\n\nconst tryMoveCard = (stack, column) => {\n  const result = {\n    allowMove: false,\n    length: 0,\n  };\n  if (column.length === 0) {\n    return {\n      allowMove: true,\n      length: stack.length,\n    };\n  }\n  const target = column[column.length - 1];\n  stack.forEach((item, index) => {\n    if (\n      item.color % 2 !== target.color % 2 &&\n      item.value === target.value - 1\n    ) {\n      result.allowMove = true;\n      result.length = stack.length - index;\n    }\n  });\n  return result;\n};\n\nexport default function Column(props) {\n  const dispatch = useDispatch();\n  const selected = useSelector((state) => state.cells.temp);\n  const collections = useSelector((state) => state.cells.collections);\n  const slots = useSelector(state => state.cells.slots);\n  const columns = useSelector((state) => state.cells.columns);\n  const start = useSelector((state) => state.cells.start);\n  const blockAutoCollection = useSelector((state) => state.cells.blockAutoCollection);\n  const data = columns[props.index];\n\n  const handleOnClick = React.useCallback((e) => {\n    if (e) {\n      e.stopPropagation();\n    }\n    const moveInfo = tryMoveCard(\n      selected.stack,\n      data\n    );\n    if (moveInfo.allowMove) {\n      dispatch(moveCard({ target: props.index, length: moveInfo.length }));\n    } else {\n      const stack = searchMoveableCard(data);\n      dispatch(\n        selectColumn({ index: props.index, stack: stack, type: \"column\" })\n      );\n    }\n  }, [data, dispatch, props.index, selected.stack]);\n  const resetSelected = React.useCallback(() => {\n    dispatch(selectColumn({ index: -1, stack: [] }));\n  }, [dispatch]);\n\n  const shouldBackdropOpen = (index) => {\n    if (selected.type === \"column\") {\n      return (\n        props.index === selected.index &&\n        !data.length - index <= selected.stack.length\n      );\n    } else {\n      return false;\n    }\n  };\n  const checkToCollection = React.useCallback(() => {\n    if (blockAutoCollection) {\n      return;\n    }\n    const data = columns[props.index];\n    if (data.length === 0) {\n      return;\n    } else {\n      const item = data[data.length - 1];\n      const collection = collections[item.color];\n      let min = 13;\n      collections.forEach(item => {\n        if (item.length === 0) {\n          min = 0;\n        } else if (item[item.length - 1].value < min) {\n          min = item[item.length - 1].value;\n        }\n      })\n      if (item.value >= min + 2) {\n        return;\n      }\n      if (collection.length === 0) {\n        if (item.value === 0) {\n          handleOnClick();\n          dispatch(moveToCollection({ target: item.color }));\n        }\n      } else {\n        if (collection[collection.length - 1].value + 1 === item.value) {\n          handleOnClick();\n          dispatch(moveToCollection({ target: item.color }));\n        }\n      }\n    }\n  }, [blockAutoCollection, collections, columns, dispatch, handleOnClick, props.index]);\n  const couldToCollection = () => {\n    const data = columns[props.index];\n    if (data.length === 0) {\n      return false;\n    } else {\n      const item = data[data.length - 1];\n      const collection = collections[item.color];\n      if (collection.length === 0) {\n        if (item.value === 0) {\n          return true;\n        }\n      } else {\n        if (collection[collection.length - 1].value + 1 === item.value) {\n          return true;\n        }\n      }\n      return false;\n    }\n  };\n  const couldToSlot = () => {\n    const data = columns[props.index];\n    if (data.length === 0) {\n      return false;\n    } else {\n      for (let i = 0; i < slots.length; i++) {\n        if (slots[i] === null) {\n          return {\n            allow: true,\n            target: i,\n          };\n        }\n      }\n      return { allow: false };\n    }\n  };\n  const handleMouseUp = (e) => {\n    if (e.button === 2) {\n      const slotsInfo = couldToSlot();\n      if (couldToCollection()) {\n        resetSelected();\n        handleOnClick();\n        dispatch(moveToCollection({ target: data[data.length - 1].color }));\n      } else if (slotsInfo.allow) {\n        resetSelected();\n        handleOnClick();\n        dispatch(moveToSlot({ target: slotsInfo.target }));\n      }\n    }\n  };\n  React.useEffect(() => {\n    if (start) {\n      checkToCollection();\n    }\n  }, [checkToCollection, start]);\n\n  return (\n    <ColumnWrapper onClick={handleOnClick} onMouseUp={handleMouseUp}>\n      {data.length === 0 ? (\n        <EmptyCard />\n      ) : (\n        data.map((card, index) => (\n          <Card\n            key={index}\n            data={card}\n            backdrop={shouldBackdropOpen(index)}\n            last={index === data.length - 1}\n          />\n        ))\n      )}\n      <MoveAbleColumn\n        show={selected.index === props.index && selected.type === \"column\"}\n      />\n    </ColumnWrapper>\n  );\n}\n\nconst MoveAbleColumnWrapper = styled.div`\n  position: absolute;\n  top: ${(props) => props.space * 3}rem;\n  box-shadow: 0px 1px 2px 4px rgba(0, 0, 0, 0.5);\n  border-radius: 0.5rem;\n`;\n\nconst MoveAbleColumn = (props) => {\n  const selected = useSelector((state) => state.cells.temp);\n  const column = useSelector((state) => state.cells.columns[selected.index]);\n  const dispatch = useDispatch();\n  const handleOnClick = (e) => {\n    e.stopPropagation();\n    dispatch(selectColumn({ index: -1, stack: [] }));\n  };\n  if (!props.show) {\n    return null;\n  } else {\n    return (\n      <MoveAbleColumnWrapper\n        onClick={handleOnClick}\n        space={column.length - selected.stack.length}\n      >\n        {selected.stack.map((item, index) => (\n          <Card\n            key={index}\n            data={item}\n            last={index === selected.stack.length - 1}\n          />\n        ))}\n      </MoveAbleColumnWrapper>\n    );\n  }\n};\n","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\"\nimport Column from \"./Column\";\n\nconst ColumnContainer = styled.div`\n  display: flex;\n  margin-top: 2rem;\n\n  @media (max-width: 960px) {\n    transform: scale(0.5);\n    margin-top: -2rem;\n    transform-origin: 50% 0;\n  }\n`;\n\nexport default function GamePanel() {\n  const columns = useSelector(state => state.cells.columns);\n  return (\n    <ColumnContainer>\n    {\n      columns.map((column, index) => <Column key={index} index={index} />)\n    }\n    </ColumnContainer>\n  )\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { setStatus } from './cellsSlice';\n\nconst HelpContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  flex-grow: 1;\n`;\nconst HelpItem = styled.div`\n  padding: 1.5rem;\n  width: 35rem;\n  background-color: rgba(0, 0, 0, 0.5);\n  border: 2px solid #000;\n  margin: 0.5rem 0;\n  border-radius: 4px;\n  color: white;\n  user-select: none;\n  p {\n    margin: 0;\n  }\n`;\n\nfunction Help() {\n  const dispatch = useDispatch();\n  const handleBack = () => {\n    dispatch(setStatus('index'));\n  };\n  return (\n    <HelpContainer onClick={handleBack}>\n      <HelpItem>\n        <h3 style={{ textAlign: 'center' }}>帮助&amp;介绍</h3>\n        <h4>游戏目标</h4>\n        <p>在四个回收单元中各创建一叠牌，每叠 13 张，且花色相同。每叠牌必须按从小 (A) 到大 (K) 的顺序排列。</p>\n        <h4>如何玩牌</h4>\n        <p>空当接龙仅使用一副牌玩，共 52 张，牌的正面朝上，排成八列。通过从这八列中移牌来创建四叠牌：</p>\n        <p>左上角是四个“可用单元”，移牌时可以在其中临时放牌。</p>\n        <p>右上角是四个“回收单元”，在其中构建获胜所需的牌叠。</p>\n        <h4>具体玩法</h4>\n        <p>从每列底部拖牌，并按以下方式移动：</p>\n        <p>从列到可用单元。每个可用单元一次只能放一张牌。</p>\n        <p>从列到列（或从可用单元到列）。在列中必须按降序依次放牌，而且红黑花色交替。</p>\n        <p>从列到回收单元。每叠牌必须由同一花色组成，并从 A 开始。</p>\n        <p>每一列中只能移动最下面的牌，被压住的牌是不能直接移动的。左上的中转单元中的牌都可以移动。</p>\n        <p style={{ textAlign: 'center', marginTop: '2rem' }}>*点击背景任意位置返回菜单*</p>\n      </HelpItem>\n    </HelpContainer>\n  )\n}\n\nexport default Help;","import styled from \"styled-components\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setMessage } from \"./cellsSlice\";\nimport _ from 'lodash';\n\nconst MessageContainer = styled.div`\n  position: fixed;\n  bottom: ${(props) => (props.open ? \"3rem\" : \"-3rem\")};\n  transition: 400ms;\n  left: 0;\n  right: 0;\n  height: 2.5rem;\n  width: 28rem;\n  background-color: rgb(211, 47, 47);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n  border-radius: 4px;\n  color: white;\n  margin: 0 auto;\n  box-shadow: 0px 3px 5px -1px rgb(0 0 0 / 20%),\n    0px 6px 10px 0px rgb(0 0 0 / 14%), 0px 1px 18px 0px rgb(0 0 0 / 12%);\n`;\n\nfunction Message() {\n  const message = useSelector((state) => state.cells.message);\n  const timeout = React.useRef(null);\n  const timestamp = React.useRef(null);\n  const dispatch = useDispatch();\n\n  const handleCloseMessage = React.useCallback(() => {\n    dispatch(setMessage({ open: false }));\n  }, [dispatch]);\n  React.useEffect(() => {\n    if (timeout.current !== null) {\n      clearTimeout(timeout.current);\n    }\n    if (message.open || message.message_id !== timestamp.current) {\n      timeout.current = setTimeout(() => {\n        handleCloseMessage();\n      }, 2000);\n      timestamp.current = message.message_id;\n    }\n  }, [handleCloseMessage, message.message_id, message.open]);\n  return (\n    <MessageContainer open={message.open}>\n      <b style={{ userSelect: \"none\" }}>\n        {message.text}\n      </b>\n    </MessageContainer>\n  );\n}\n\nexport default Message;\n","import { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { setStatus } from \"./cellsSlice\";\n\nconst WelcomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n`;\nconst WelcomeItem = styled.div`\n  width: 25rem;\n  height: 3rem;\n  background-color: rgba(0, 0, 0, 0.5);\n  border: 2px solid #000;\n  margin: 0.5rem 0;\n  border-radius: 4px;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  user-select: none;\n  opacity: ${props => props.disable ? 0.5 : 1};\n  ${\n    props => props.disable ? 'cursor: not-allowed;' : \n  `\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.75);\n      cursor: pointer;\n    }\n  `\n  }\n`;\n\nfunction Welcome() {\n  const dispatch = useDispatch();\n\n  const handleNewGame = () => {\n    dispatch(setStatus('game'));\n  };\n  const handleHelp = () => {\n    dispatch(setStatus('help'));\n  }\n  return (\n    <WelcomeContainer>\n      <WelcomeItem disable={true}>继续游戏(构建中...)</WelcomeItem>\n      <WelcomeItem onClick={handleNewGame}>新的游戏</WelcomeItem>\n      <WelcomeItem onClick={handleHelp}>游戏帮助</WelcomeItem>\n    </WelcomeContainer>\n  )\n}\n\nexport default Welcome;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { cancelAction, initColumn, pushIntoHistory, selectColumn } from \"./cellsSlice\";\nimport ControlBar from \"./ControlBar\";\nimport End from \"./End\";\nimport FAB from \"./FAB\";\nimport GamePanel from \"./GamePanel\";\nimport Help from \"./Help\";\nimport Message from \"./Message\";\nimport Welcome from './Welcome';\n\nconst Background = styled.div`\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  background-color: green;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nfunction Cells() {\n  const dispatch = useDispatch();\n  const status = useSelector((state) => state.cells.status);\n  const history = useSelector((state) => state.cells.history);\n  const state = useSelector((state) => state.cells);\n  const shortcut = React.useRef(new Map());\n  const handleCancelSelected = (e) => {\n    dispatch(selectColumn({ index: -1, stack: [] }));\n  };\n  const handleCancelAction = (e) => {\n    e.stopPropagation();\n    if (history.length > 1) {\n      dispatch(cancelAction(history[history.length - 2]));\n    }\n  };\n\n  React.useEffect(() => {\n    dispatch(initColumn());\n  }, [dispatch]);\n  React.useEffect(() => {\n    dispatch(pushIntoHistory({\n      columns: state.columns,\n      slots: state.slots,\n      collections: state.collections,\n    }));\n  }, [state.columns, state.slots, state.collections, dispatch]);\n  React.useEffect(() => {\n    document.onkeydown = (e) => {\n      shortcut.current.set(e.code, true);\n      if (shortcut.current.get('ControlLeft') && shortcut.current.get('KeyZ')) {\n        handleCancelAction(e);\n      }\n    };\n    document.onkeyup = (e) => {\n      shortcut.current.set(e.code, false);\n    };\n    return () => {\n      document.onkeydown = () => {};\n      document.onkeyup = () => {};\n    };\n  })\n\n  let content;\n  if (status === \"index\") {\n    content = <Welcome />;\n  } else if (status === \"game\") {\n    content = (\n      <>\n        <ControlBar />\n        <GamePanel />\n        <Message />\n        <FAB onClick={handleCancelAction}>撤销</FAB>\n      </>\n    );\n  } else if (status === \"help\") {\n    content = (<Help />);\n  } else if (status === \"end\") {\n    content = (<End />);\n  }\n  return (\n    <Background onClick={handleCancelSelected} onContextMenu={e => e.preventDefault()}>\n      {content}\n    </Background>\n  );\n}\n\nexport default Cells;\n","import styled from \"styled-components\";\n\nconst HeaderContainer = styled.div`\n  background: rgba(0,0,0, 0.5);\n  height: 4rem;\n  left: 0;\n  right: 0;\n  position: absolute;\n  z-index: 10;\n  color: #FFF;\n  display: flex;\n  align-items: center;\n  @media (max-width: 960px) {\n    display: none;\n  }\n`;\nconst Title = styled.div`\n  font-size: 2rem;\n  font-family: '微软雅黑';\n  padding-left: 1rem;\n  user-select: none;\n`;\nconst MenuButton = styled.div`\n  width: 3rem;\n  height: 2rem;\n  border: 1px solid rgba(255, 255, 255, 0.5);\n  margin-left: 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  user-select: none;\n  border-radius: 4px;\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n    color: black;\n    cursor: pointer;\n  }\n`;\n\nfunction Header() {\n  return (\n    <HeaderContainer>\n      <MenuButton>Menu</MenuButton>\n      <Title>空当接龙</Title>\n    </HeaderContainer>\n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport Cells from './cells';\nimport Header from './layout/Header';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Router path=\"/\">\n          <Cells />\n        </Router>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport cellsReducer from \"./cells/cellsSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    cells: cellsReducer,\n  },\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}